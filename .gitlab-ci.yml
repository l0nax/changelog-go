image: golang:1.14

include:
  - template: SAST.gitlab-ci.yml
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: License-Scanning.gitlab-ci.yml

stages:
  - build
  - test
  - deploy

build:
  stage: build
  script:
  - make depends assets
  - make build-dev
  # execute goreleaser but without pushing, signing or validating â€“ so we can
  # use the artifacts ie. in Sentry
  - goreleaser release --skip-validate --skip-publish --skip-sign
  artifacts:
    expire_in: 1 hour
    paths:
    - internal/assets.go
    - dist/

sentry_deploy:
  stage: deploy
  image: getsentry/sentry-cli
  script:
    # get new Version from `git-semver`
    - go get github.com/mdomke/git-semver@master
    - export NEW_VERSION="${PRJ}@$(git-semver -prefix v)"
    # create new release in sentry
    - sentry-cli releases new -p ${SENTRY_PRJ} ${VERSION}
    # add commits
    - sentry-cli releases set-commits --auto $CI_COMMIT_SHA
    # upload artifacts
    - export BINARIES=$(ls -d dist/*/* | grep -v prime)
    - ls -d dist/*/* | grep -v prime
    - sentry-cli upload-dif -p ${SENTRY_PRJ} --wait ${BINARIES}
    - sentry-cli releases files ${VERSION} upload ${BINARIES}
    # finalize sentry release
    - sentry-cli releases finalize $CI_COMMIT_SHA
